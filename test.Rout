ARGUMENT 'numI=2.5' __ignored__

ARGUMENT 'meanN=3.4' __ignored__

ARGUMENT 'stdN=4.4' __ignored__

ARGUMENT 'tr' __ignored__

R version 2.9.2 (2009-08-24)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

REvolution R enhancements not installed.  For improved
performance and other extensions: apt-get install revolution-r

> 
> ## list the arguments passed into the program.
> commandArgs()
[1] "/usr/lib/R/bin/exec/R" "--no-restore"          "--no-save"            
[4] "--no-readline"         "numI=2.5"              "meanN=3.4"            
[7] "stdN=4.4"              "tr"                   
> 
> ## Now to parse the command line options
> ## If there is an = sign in the arg then it is parsed and the
> ## first part of the arg is treated as the variable name with
> ## the second being the value of the argument.
> ## If there is no = sign then the arg value is assigned TRUE
> ##
> ## Note that we do character it integer conversion for variables whose name ends
> ## with an I (integer) and N (floating/integer). This is done of course because
> ## the command Line arguments come in as strings.
> 
> for (e in commandArgs()) {
+   ta = strsplit(e,"=",fixed=TRUE)
+   if(! is.na(ta[[1]][2])) {
+     temp = ta[[1]][2]
+     if(substr(ta[[1]][1],nchar(ta[[1]][1]),nchar(ta[[1]][1])) == "I") {
+       temp = as.integer(temp)
+     }
+     if(substr(ta[[1]][1],nchar(ta[[1]][1]),nchar(ta[[1]][1])) == "N") {
+       temp = as.numeric(temp)
+     }
+     assign(ta[[1]][1],temp)
+     cat("assigned ",ta[[1]][1]," the value of |",temp,"|\n")
+   } else {
+     assign(ta[[1]][1],TRUE)
+     cat("assigned ",ta[[1]][1]," the value of TRUE\n")
+   }
+ }
assigned  /usr/lib/R/bin/exec/R  the value of TRUE
assigned  --no-restore  the value of TRUE
assigned  --no-save  the value of TRUE
assigned  --no-readline  the value of TRUE
assigned  numI  the value of | 2 |
assigned  meanN  the value of | 3.4 |
assigned  stdN  the value of | 4.4 |
assigned  tr  the value of TRUE
> 
> 
> 
> 
> ## generate the name we will use for the vector
> name = paste("normal",numI,meanN,stdN,sep="_",collapse="")
> 
> ## generate the random normals
> assign(name,rnorm(numI,meanN,stdN))
> 
> ## generate the name we will use for the data file
> file = paste(numI,meanN,stdN,"normal",sep="-",collapse="")
> file = paste(file,"RData",sep=".",collapse="")
> file
[1] "2-3.4-4.4-normal.RData"
> 
> ## save the data
>  save.image(file=file,ascii=TRUE)
> 
